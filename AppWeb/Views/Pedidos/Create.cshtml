@model AppWeb.Models.PedidoNuevoVM

@{
    ViewBag.Title = "Nuevo";
}

<h2>Pedido <small>nuevo</small></h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Nuevo registro</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.ClienteNombre, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.HiddenFor(model => model.ClienteId, htmlAttributes: new { @class = "control-label col-md-2" })
                <select id="@Html.IdFor(model => model.ClienteNombre)" name="@Html.NameFor(model => model.ClienteNombre)"
                        class="form-control">
                </select>
                @Html.ValidationMessageFor(model => model.ClienteNombre, "", new { @class = "text-danger" })
                @Html.ValidationMessageFor(model => model.ClienteId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FechaPedido, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FechaPedido, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.FechaPedido, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Ajax.ActionLink(" ", "CreateAjax", null,
                new AjaxOptions
                {
                    HttpMethod = "GET",
                    InsertionMode = InsertionMode.Replace,
                    UpdateTargetId = "detalle-item",
                    AllowCache = false
                },
                new { data_toggle = "modal", @data_target = "#item-pedido", @class = "btn btn-xs btn-success glyphicon glyphicon-edit" }
            )
            <table id="tbl-nuevo-pedido" class="table table-hover table-striped">
                <thead>
                    <tr>
                        <th>Producto ID</th>
                        <th>Producto</th>
                        <th>Precio</th>
                        <th>Cantidad</th>
                        <th>Total</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                </tbody>
            </table>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Crear" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Volver", "Index")
</div>

<div id="item-pedido" class="modal fade" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content" id="detalle-item">
            <!-- El coontenido se cargara via ajax -->
        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
</div><!-- /.modal -->

@section Styles {
    <link href="~/Content/DataTables/css/dataTables.bootstrap.min.css" rel="stylesheet" />
    <link href="~/Content/css/select2.min.css" rel="stylesheet" />
    <link href="~/Content/select2-bootstrap.css" rel="stylesheet" />
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/DataTables/jquery.dataTables.min.js"></script>
    <script src="~/Scripts/DataTables/dataTables.bootstrap.min.js"></script>
    <script src="~/Scripts/jquery.mask.min.js"></script>
    <script src="~/Scripts/select2.min.js"></script>
    <script>
        $(document).ready(function () {
            $(':input[date-picker]').datepicker({
                dateFormat: 'yy-mm-dd'
            });
            $(':input[date-picker]').mask('0000-00-00');
            $('.money2').mask("###0.00", { reverse: true });

            $('#@Html.IdFor(model => model.ClienteNombre)').select2({
                placeholder: 'Elija una opcion...',
                delay: 3000,
                ajax: {
                    url: '@Url.Action("GetClientes", "Clientes")',
                    dataType: 'json',
                    data: function (params) {
                        var query = {
                            filtro: params.term
                        }
                        return query;
                    },
                    processResults: function (data) {
                        return {
                            results: data.data.map(function (item) {
                                return {
                                    id: item.Identificacion,
                                    text: item.NombreCompleto
                                };
                            })
                        };
                    }
                }
            });

            let tipoIdentificacion = ["Cedula","Pasaporte", "RUC"]
            let tabla = $('#tbl-nuevo-pedido').DataTable({
                columns: [
                    { "data": "ProductoId" },
                    { "data": "ProductoNombre" },
                    { "data": "Precio" },
                    { "data": "Cantidad" }
                ],
                columnDefs: [
                     {
                        "visible": false,
                        "targets": 0
                    },
                    {
                        "render": function (data, type, row) {
                            return (row.Precio*1) * (row.Cantidad*1);
                        },
                        "targets": 4
                    },
                ],
                language: {
                    url: '/Scripts/es_EC.json'
                }
            });


            $('#@Html.IdFor(model => model.ClienteNombre)').on('select2:select', function (e) {
                var data = e.params.data;
                $("#@Html.IdFor(model => model.ClienteId)").val(data.id);
            });

            $(document).on('submit', '#detalle-item form', function (e) {
                e.preventDefault();
                var form = $(this).serializeArray();
                var fila = {};
                for (var i = 0; i < form.length; i++) {
                    fila[form[i].name] = form[i].value;
                }
                tabla.row.add(fila).draw(false);
            })
        });
    </script>
}